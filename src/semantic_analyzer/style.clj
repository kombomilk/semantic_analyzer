(ns semantic-analyzer.style
  (:require [clojure.set]))

(def STYLES
     {:public "Публицистический"
      :fiction "Художественный"
      :science "Научный"
      :official "Официально-деловой"
      :unknown "Неизвестно"})

(def STEMS
     {:public
      ["материа" "стат" "журналист" "журналистик" "журналистк"
       "да" "информац" "информацио" "сообща" "сообщен" "источник"
       "новос" "новостн" "вест" "газет" "газетн" "журна" "журнальн"
       "опрос" "%" "публицистик" "публицист" "сведен" "факт"
       "фактическ" "документ" "статистик" "представител" "да"
       "представля" "представлен" "гуманизм" "авангард" "иде"
       "задержа" "ход" "отмеча" "отмечаетс" "телекана" "эфир"
       "очевидц" "очевидец" "разрабатыва" "разработк" "мэр"
       "ссылк" "ссылается" "издан" "реализова" "профессиона"
       "профессиональн" "ожидаетс" "ожидаем" "прогноз"
       "прогнозируетс" "прогнозируем" "решен" "решительн"
       "подразумева" "понима"]
      :fiction []
      :science
      ["наук" "научн" "учен" "исследован" "доказательств" "доказа"
       "открыт" "откры" "терм" "терминолог" "изобрете" "изобретен"
       "изобретател" "физическ" "математическ" "обнаруж" "понят"
       "отношен" "взаимосвяз" "логик" "логическ" "логич" "вывод"
       "связ" "теорем" "теор" "теоретик" "практик" "лаборатор"
       "оп" "опытн" "инструмент" "прибор" "измер" "измерен"
       "наш" "статистик" "анализ" "результат" "стат" "реценз"
       "автор" "диссертац" "кандидат" "процесс" "рассмотре"
       "изуче" "основываетс" "основ" "основател" "аспект"
       "аннотац" "ключев" "ключ" "пространств" "совреме"
       "характеристик" "характерн" "описан" "классификац"
       "осуществляетс" "реализац" "взаимодейств" "возникновен"
       "конструирован" "проблем" "отношен" "традицио" "традиц"
       "метод" "способ" "дисципл" "отрасл"]
      :official
      ["приказ" "договор" "объяснительн" "записк" "служебн"
       "служб" "служащ" "работ" "карьер" "должнос" "освобод"
       "прич" "отпуск" "ваканс" "зарплат" "опоздан" "штраф"
       "нарушен" "бизнес" "поставк" "переговор" "презентац"
       "встреч" "совещан" "работник" "рынок" "бумаг" "це" "де"
       "акц" "бирж" "фонд" "продаж" "торговл" "посредник"
       "продавец" "покупател" "купл" "продаж" "смет" "накладн"
       "уважаем" "дорог" "директор" "руководител" "начальник"
       "факс" "письм" "переписк" "срок" "проект" "обстоятельств"
       "принят" "решен" "указа" "повтор" "направле" "направлен"
       "выясн" "выясня" "обнаруж"]})

(def score (ref
	    {:public 0
	     :fiction 0
	     :science 0
	     :official 0}))

(def FICTION_CONSTANT 0.05)

(defn updateField [code number]
  (dosync
   (ref-set score
	    (assoc @score code number))))

(defn resetStatistics []
  (doseq [code (keys STEMS)]
    (updateField code 0)))

(defn printStatistics []
  (doseq [code (keys STEMS)]
    (println (code STYLES) ":" (code @score))))

(defn updateScore [words]
  (updateField :fiction (+
			 (:fiction @score)
			 (* FICTION_CONSTANT (count words))))
  (doseq [code (keys STEMS)]
    (updateField code
		 (+ (code @score)
		    (count
		     (clojure.set/intersection (set words)
					       (set (code STEMS))))))))

(defn getStyle []
  ((first (apply max-key second @score))
   STYLES))